"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/services/ai.ts":
/*!********************************!*\
  !*** ./src/app/services/ai.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateCode: function() { return /* binding */ generateCode; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nasync function generateCode(prompt) {\n    try {\n        console.log(\"Sending request to backend...\");\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"http://localhost:5000/api/generate\", {\n            prompt\n        }, {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        console.log(\"Received response:\", response.data);\n        if (response.data.error) {\n            throw new Error(response.data.error);\n        }\n        const content = response.data.code;\n        let code = \"\";\n        let message = \"\";\n        // Extract code blocks from the response\n        const codeBlockRegex = /```(?:\\w+)?\\n([\\s\\S]*?)```/g;\n        const matches = content.match(codeBlockRegex);\n        if (matches) {\n            // Extract all code blocks\n            code = matches.map((block)=>block.replace(/```(?:\\w+)?\\n|```/g, \"\")).join(\"\\n\\n\");\n            // Remove code blocks to get just the explanation\n            message = content.split(codeBlockRegex).filter((text)=>text && !text.trim().match(/^[\\w-]+$/)) // Remove language identifiers\n            .join(\"\\n\").trim();\n        } else {\n            // If no code blocks found, treat it all as explanation\n            message = content;\n            code = \"// No code blocks found in the response\";\n        }\n        return {\n            code: code || \"// No code generated\",\n            language: response.data.language || \"javascript\",\n            message: message || \"Code generated successfully\"\n        };\n    } catch (error) {\n        var _error_response, _error_response1, _error_response_data, _error_response2;\n        console.error(\"Error details:\", {\n            message: error.message,\n            response: (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data,\n            status: (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status\n        });\n        const errorMessage = ((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : (_error_response_data = _error_response2.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.error) || error.message || \"Failed to generate code. Please try again.\";\n        throw new Error(errorMessage);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvc2VydmljZXMvYWkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEI7QUFZbkIsZUFBZUMsYUFBYUMsTUFBYztJQUsvQyxJQUFJO1FBQ0ZDLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1DLFdBQVcsTUFBTUwsNkNBQUtBLENBQUNNLElBQUksQ0FBRSxzQ0FBcUM7WUFBRUo7UUFBTyxHQUFHO1lBQ2xGSyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUFKLFFBQVFDLEdBQUcsQ0FBQyxzQkFBc0JDLFNBQVNHLElBQUk7UUFFL0MsSUFBSUgsU0FBU0csSUFBSSxDQUFDQyxLQUFLLEVBQUU7WUFDdkIsTUFBTSxJQUFJQyxNQUFNTCxTQUFTRyxJQUFJLENBQUNDLEtBQUs7UUFDckM7UUFFQSxNQUFNRSxVQUFVTixTQUFTRyxJQUFJLENBQUNJLElBQUk7UUFDbEMsSUFBSUEsT0FBTztRQUNYLElBQUlDLFVBQVU7UUFFZCx3Q0FBd0M7UUFDeEMsTUFBTUMsaUJBQWlCO1FBQ3ZCLE1BQU1DLFVBQVVKLFFBQVFLLEtBQUssQ0FBQ0Y7UUFFOUIsSUFBSUMsU0FBUztZQUNYLDBCQUEwQjtZQUMxQkgsT0FBT0csUUFDSkUsR0FBRyxDQUFDQyxDQUFBQSxRQUFTQSxNQUFNQyxPQUFPLENBQUMsc0JBQXNCLEtBQ2pEQyxJQUFJLENBQUM7WUFFUixpREFBaUQ7WUFDakRQLFVBQVVGLFFBQ1BVLEtBQUssQ0FBQ1AsZ0JBQ05RLE1BQU0sQ0FBQ0MsQ0FBQUEsT0FBUUEsUUFBUSxDQUFDQSxLQUFLQyxJQUFJLEdBQUdSLEtBQUssQ0FBQyxhQUFhLDhCQUE4QjthQUNyRkksSUFBSSxDQUFDLE1BQ0xJLElBQUk7UUFDVCxPQUFPO1lBQ0wsdURBQXVEO1lBQ3ZEWCxVQUFVRjtZQUNWQyxPQUFPO1FBQ1Q7UUFFQSxPQUFPO1lBQ0xBLE1BQU1BLFFBQVE7WUFDZGEsVUFBVXBCLFNBQVNHLElBQUksQ0FBQ2lCLFFBQVEsSUFBSTtZQUNwQ1osU0FBU0EsV0FBVztRQUN0QjtJQUNGLEVBQUUsT0FBT0osT0FBWTtZQUdQQSxpQkFDRkEsa0JBR1dBLHNCQUFBQTtRQU5yQk4sUUFBUU0sS0FBSyxDQUFDLGtCQUFrQjtZQUM5QkksU0FBU0osTUFBTUksT0FBTztZQUN0QlIsUUFBUSxHQUFFSSxrQkFBQUEsTUFBTUosUUFBUSxjQUFkSSxzQ0FBQUEsZ0JBQWdCRCxJQUFJO1lBQzlCa0IsTUFBTSxHQUFFakIsbUJBQUFBLE1BQU1KLFFBQVEsY0FBZEksdUNBQUFBLGlCQUFnQmlCLE1BQU07UUFDaEM7UUFFQSxNQUFNQyxlQUFlbEIsRUFBQUEsbUJBQUFBLE1BQU1KLFFBQVEsY0FBZEksd0NBQUFBLHVCQUFBQSxpQkFBZ0JELElBQUksY0FBcEJDLDJDQUFBQSxxQkFBc0JBLEtBQUssS0FDNUJBLE1BQU1JLE9BQU8sSUFDYjtRQUVwQixNQUFNLElBQUlILE1BQU1pQjtJQUNsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvc2VydmljZXMvYWkudHM/YjYwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIHtcclxuICByb2xlOiAndXNlcicgfCAnYXNzaXN0YW50JztcclxuICBjb250ZW50OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29kZUdlbmVyYXRpb25SZXNwb25zZSB7XHJcbiAgY29kZTogc3RyaW5nO1xyXG4gIGxhbmd1YWdlOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUNvZGUocHJvbXB0OiBzdHJpbmcpOiBQcm9taXNlPHtcclxuICBjb2RlOiBzdHJpbmc7XHJcbiAgbGFuZ3VhZ2U6IHN0cmluZztcclxuICBtZXNzYWdlOiBzdHJpbmc7XHJcbn0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ1NlbmRpbmcgcmVxdWVzdCB0byBiYWNrZW5kLi4uJyk7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvZ2VuZXJhdGVgLCB7IHByb21wdCB9LCB7XHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIHJlc3BvbnNlOicsIHJlc3BvbnNlLmRhdGEpO1xyXG5cclxuICAgIGlmIChyZXNwb25zZS5kYXRhLmVycm9yKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5kYXRhLmVycm9yKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBjb250ZW50ID0gcmVzcG9uc2UuZGF0YS5jb2RlO1xyXG4gICAgbGV0IGNvZGUgPSAnJztcclxuICAgIGxldCBtZXNzYWdlID0gJyc7XHJcblxyXG4gICAgLy8gRXh0cmFjdCBjb2RlIGJsb2NrcyBmcm9tIHRoZSByZXNwb25zZVxyXG4gICAgY29uc3QgY29kZUJsb2NrUmVnZXggPSAvYGBgKD86XFx3Kyk/XFxuKFtcXHNcXFNdKj8pYGBgL2c7XHJcbiAgICBjb25zdCBtYXRjaGVzID0gY29udGVudC5tYXRjaChjb2RlQmxvY2tSZWdleCk7XHJcblxyXG4gICAgaWYgKG1hdGNoZXMpIHtcclxuICAgICAgLy8gRXh0cmFjdCBhbGwgY29kZSBibG9ja3NcclxuICAgICAgY29kZSA9IG1hdGNoZXNcclxuICAgICAgICAubWFwKGJsb2NrID0+IGJsb2NrLnJlcGxhY2UoL2BgYCg/OlxcdyspP1xcbnxgYGAvZywgJycpKVxyXG4gICAgICAgIC5qb2luKCdcXG5cXG4nKTtcclxuICAgICAgXHJcbiAgICAgIC8vIFJlbW92ZSBjb2RlIGJsb2NrcyB0byBnZXQganVzdCB0aGUgZXhwbGFuYXRpb25cclxuICAgICAgbWVzc2FnZSA9IGNvbnRlbnRcclxuICAgICAgICAuc3BsaXQoY29kZUJsb2NrUmVnZXgpXHJcbiAgICAgICAgLmZpbHRlcih0ZXh0ID0+IHRleHQgJiYgIXRleHQudHJpbSgpLm1hdGNoKC9eW1xcdy1dKyQvKSkgLy8gUmVtb3ZlIGxhbmd1YWdlIGlkZW50aWZpZXJzXHJcbiAgICAgICAgLmpvaW4oJ1xcbicpXHJcbiAgICAgICAgLnRyaW0oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIElmIG5vIGNvZGUgYmxvY2tzIGZvdW5kLCB0cmVhdCBpdCBhbGwgYXMgZXhwbGFuYXRpb25cclxuICAgICAgbWVzc2FnZSA9IGNvbnRlbnQ7XHJcbiAgICAgIGNvZGUgPSAnLy8gTm8gY29kZSBibG9ja3MgZm91bmQgaW4gdGhlIHJlc3BvbnNlJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjb2RlOiBjb2RlIHx8ICcvLyBObyBjb2RlIGdlbmVyYXRlZCcsXHJcbiAgICAgIGxhbmd1YWdlOiByZXNwb25zZS5kYXRhLmxhbmd1YWdlIHx8ICdqYXZhc2NyaXB0JyxcclxuICAgICAgbWVzc2FnZTogbWVzc2FnZSB8fCAnQ29kZSBnZW5lcmF0ZWQgc3VjY2Vzc2Z1bGx5JyxcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZGV0YWlsczonLCB7XHJcbiAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXHJcbiAgICAgIHJlc3BvbnNlOiBlcnJvci5yZXNwb25zZT8uZGF0YSxcclxuICAgICAgc3RhdHVzOiBlcnJvci5yZXNwb25zZT8uc3RhdHVzLFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlPy5kYXRhPy5lcnJvciB8fCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSB8fCBcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ0ZhaWxlZCB0byBnZW5lcmF0ZSBjb2RlLiBQbGVhc2UgdHJ5IGFnYWluLic7XHJcbiAgICBcclxuICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpO1xyXG4gIH1cclxufSAiXSwibmFtZXMiOlsiYXhpb3MiLCJnZW5lcmF0ZUNvZGUiLCJwcm9tcHQiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJwb3N0IiwiaGVhZGVycyIsImRhdGEiLCJlcnJvciIsIkVycm9yIiwiY29udGVudCIsImNvZGUiLCJtZXNzYWdlIiwiY29kZUJsb2NrUmVnZXgiLCJtYXRjaGVzIiwibWF0Y2giLCJtYXAiLCJibG9jayIsInJlcGxhY2UiLCJqb2luIiwic3BsaXQiLCJmaWx0ZXIiLCJ0ZXh0IiwidHJpbSIsImxhbmd1YWdlIiwic3RhdHVzIiwiZXJyb3JNZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/services/ai.ts\n"));

/***/ })

});